JND_Difference = 0.25
Multiplicator_PSE_Standard = 0
Multiplicator_SD_Standard = 0.15
Type_ResponseFunction = "normal"
SD_ResponseFunction = 0.1
Mean_Variability_Between = 0.2
SD_Variability_Between = 0.2
nIterations = 1
PowerfulDataframe = data.frame()
for (nParticipants in RangeNs){
for (reps in RangeRepetitions){
for(i in 1:nIterations)
print(nParticipants)
print(reps)
print(nIterations)
Psychometric = SimulatePsychometricData(nParticipants,
ConditionOfInterest,
StandardValues,
reps,
PSE_Difference,
JND_Difference,
Multiplicator_PSE_Standard,
Multiplicator_SD_Standard,
Type_ResponseFunction,
SD_ResponseFunction,
Mean_Variability_Between,
SD_Variability_Between)
GLMM = glmer(cbind(Yes, Total - Yes) ~ ConditionOfInterest*Difference + (ConditionOfInterest+Difference| ID) + (ConditionOfInterest+Difference| StandardValues),
family = binomial(link = "logit"),
data = Psychometric,
nAGQ = 1,
glmerControl(optimizer = "nloptwrap"))
summary(GLMM)$coefficients[14]
summary(GLMM)$coefficients[16]
PowerfulDataframe = rbind(PowerfulDataframe,c(nParticipants=nParticipants,
reps=reps,
pvalue_PSE = summary(GLMM)$coefficients[14],
pvalue_JND = summary(GLMM)$coefficients[16],
iteration = i))
}
}
colnames(PowerfulDataframe) = c("nParticipants","reps","pvalue_PSE","pvalue_JND","iteration")
alpha = 0.05
PowerfulDataframe %>% group_by(nParticipants,reps) %>%
mutate(Power_PSE = mean(pvalue_PSE < alpha),
Power_JND = mean(pvalue_JND < alpha))
ggplot
ggplot(PowerfulDataframe, aes(reps,Power_PSE, color = nParticipants)) +
geom_line()
PowerfulDataframe = PowerfulDataframe %>% group_by(nParticipants,reps) %>%
mutate(Power_PSE = mean(pvalue_PSE < alpha),
Power_JND = mean(pvalue_JND < alpha))
PowerfulDataframe
PowerfulDataframe %>% group_by(nParticipants,reps) %>%
slice(1)
ggplot(PowerfulDataframe, aes(reps,Power_PSE, color = nParticipants)) +
geom_line()
ggplot(PowerfulDataframe, aes(reps,Power_PSE, color = as.factor(nParticipants))) +
geom_line()
ggplot(PowerfulDataframe, aes(reps,Power_PSE, color = as.factor(nParticipants))) +
geom_line() +
xlab("Number of trials per staircase") +
ylab("Power") +
scale_color_discrete(name = "")
ggplot(PowerfulDataframe, aes(reps,Power_PSE, color = as.factor(nParticipants))) +
geom_line() +
xlab("Number of trials per staircase") +
ylab("Power") +
scale_color_discrete(name = "Number of\Participants")
ggplot(PowerfulDataframe, aes(reps,Power_PSE, color = as.factor(nParticipants))) +
geom_line() +
xlab("Number of trials per staircase") +
ylab("Power") +
scale_color_discrete(name = "Number of\nParticipants")
RangeNs = c(10,12,14,16,18,20)
RangeRepetitions = c(40,70,100)
RangeNs = c(10,20)
RangeRepetitions = c(40,100)
ConditionOfInterest = c(0,1)
StandardValues = c(5,6,7,8)
PSE_Difference = 0.1
JND_Difference = 0.25
Multiplicator_PSE_Standard = 0
Multiplicator_SD_Standard = 0.15
Type_ResponseFunction = "normal"
SD_ResponseFunction = 0.1
Mean_Variability_Between = 0.2
SD_Variability_Between = 0.2
nIterations = 1
PowerfulDataframe = data.frame()
for (nParticipants in RangeNs){
for (reps in RangeRepetitions){
for(i in 1:nIterations)
print(nParticipants)
print(reps)
print(nIterations)
Psychometric = SimulatePsychometricData(nParticipants,
ConditionOfInterest,
StandardValues,
reps,
PSE_Difference,
JND_Difference,
Multiplicator_PSE_Standard,
Multiplicator_SD_Standard,
Type_ResponseFunction,
SD_ResponseFunction,
Mean_Variability_Between,
SD_Variability_Between)
TimeStartTrial = Sys.time() #get time at beginning of trial
GLMM = glmer(cbind(Yes, Total - Yes) ~ ConditionOfInterest*Difference + (ConditionOfInterest+Difference| ID) + (ConditionOfInterest+Difference| StandardValues),
family = binomial(link = "logit"),
data = Psychometric,
nAGQ = 1,
glmerControl(optimizer = "nloptwrap"))
RDuration_nloptwrap_nAGQ0 = Sys.time() - TimeStartTrial #get duration of fitting
print(RDuration_nloptwrap_nAGQ0)
summary(GLMM)$coefficients[14]
summary(GLMM)$coefficients[16]
PowerfulDataframe = rbind(PowerfulDataframe,c(nParticipants=nParticipants,
reps=reps,
pvalue_PSE = summary(GLMM)$coefficients[14],
pvalue_JND = summary(GLMM)$coefficients[16],
iteration = i))
}
}
colnames(PowerfulDataframe) = c("nParticipants","reps","pvalue_PSE","pvalue_JND","iteration")
alpha = 0.05
PowerfulDataframe = PowerfulDataframe %>% group_by(nParticipants,reps) %>%
mutate(Power_PSE = mean(pvalue_PSE < alpha),
Power_JND = mean(pvalue_JND < alpha))
PowerfulDataframe %>% group_by(nParticipants,reps) %>%
slice(1)
ggplot(PowerfulDataframe, aes(reps,Power_PSE, color = as.factor(nParticipants))) +
geom_line() +
xlab("Number of trials per staircase") +
ylab("Power") +
scale_color_discrete(name = "Number of\nParticipants")
(6 + 16 + 12 + 30)/4
16 * 200 * 3 * 6
(16 * 200 * 3 * 6)/60
(16 * 200 * 3 * 6)/60/60
(16 * 200 * 6)/60/60
(16 * 200 * 3 * 6)/60/60
print(paste0("200 iterations took " Sys.time() - TimeStartTrial))
print(paste0("200 iterations took ", Sys.time() - TimeStartTrial))
print(paste0("200 iterations took ", print(Sys.time() - TimeStartTrial, "Seconds")))
print(paste0("200 iterations took ", round(Sys.time() - TimeStartTrial), "Seconds"))
print(paste0("200 iterations took ", round(Sys.time() - TimeStartTrial), " Seconds"))
print(paste0("200 iterations took ", round(Sys.time() - TimeStartTrial), " seconds.
The power for the current run through (",nParticipants," Participants, ", reps, " Repetitions)"  ))
print(paste0("200 iterations took ", round(Sys.time() - TimeStartTrial), " seconds.
The power for the current run through (",nParticipants," Participants, ", reps, " Repetitions)
is ",mean(PowerfulDataframe$pvalue_PSE[PowerfulDataframe$nParticipants == nParticipants & PowerfulDataframe$reps == reps] < 0.05   )))
print(paste0("200 iterations took ", round(Sys.time() - TimeStartTrial), " seconds. The power for the current run through (",nParticipants," Participants, ", reps, " Repetitions) is ",mean(PowerfulDataframe$pvalue_PSE[PowerfulDataframe$nParticipants == nParticipants & PowerfulDataframe$reps == reps] < 0.05   )))
set.seed(1)
RangeNs = c(10,12,14,16,18,20)
RangeRepetitions = c(40,70,100)
ConditionOfInterest = c(0,1)
StandardValues = c(5,6,7,8)
PSE_Difference = 0.1
JND_Difference = 0.25
Multiplicator_PSE_Standard = 0
Multiplicator_SD_Standard = 0.15
Type_ResponseFunction = "normal"
SD_ResponseFunction = 0.1
Mean_Variability_Between = 0.2
SD_Variability_Between = 0.2
nIterations = 1
PowerfulDataframe = data.frame()
for (nParticipants in RangeNs){
for (reps in RangeRepetitions){
TimeStartTrial = Sys.time() #get time at beginning of trial
for(i in 1:nIterations){
print(nParticipants)
print(reps)
print(nIterations)
Psychometric = SimulatePsychometricData(nParticipants,
ConditionOfInterest,
StandardValues,
reps,
PSE_Difference,
JND_Difference,
Multiplicator_PSE_Standard,
Multiplicator_SD_Standard,
Type_ResponseFunction,
SD_ResponseFunction,
Mean_Variability_Between,
SD_Variability_Between)
GLMM = glmer(cbind(Yes, Total - Yes) ~ ConditionOfInterest*Difference + (ConditionOfInterest+Difference| ID) + (ConditionOfInterest+Difference| StandardValues),
family = binomial(link = "logit"),
data = Psychometric,
nAGQ = 1,
glmerControl(optimizer = "nloptwrap"))
print(RDuration_nloptwrap_nAGQ0)
summary(GLMM)$coefficients[14]
summary(GLMM)$coefficients[16]
PowerfulDataframe = rbind(PowerfulDataframe,c(nParticipants=nParticipants,
reps=reps,
pvalue_PSE = summary(GLMM)$coefficients[14],
pvalue_JND = summary(GLMM)$coefficients[16],
iteration = i))
}
print(paste0("200 iterations took ", round(Sys.time() - TimeStartTrial), " seconds. The power for the current run through (",nParticipants," Participants, ", reps, " Repetitions) is ",mean(PowerfulDataframe$pvalue_PSE[PowerfulDataframe$nParticipants == nParticipants & PowerfulDataframe$reps == reps] < 0.05)))
}
}
colnames(PowerfulDataframe) = c("nParticipants","reps","pvalue_PSE","pvalue_JND","iteration")
alpha = 0.05
PowerfulDataframe = PowerfulDataframe %>% group_by(nParticipants,reps) %>%
mutate(Power_PSE = mean(pvalue_PSE < alpha),
Power_JND = mean(pvalue_JND < alpha))
PowerfulDataframe %>% group_by(nParticipants,reps) %>%
slice(1)
ggplot(PowerfulDataframe, aes(reps,Power_PSE, color = as.factor(nParticipants))) +
geom_line() +
xlab("Number of trials per staircase") +
ylab("Power") +
scale_color_discrete(name = "Number of\nParticipants")
print(paste0(nIterations, " iterations took ", round(Sys.time() - TimeStartTrial), " seconds. The power for the current run through (",nParticipants," Participants, ", reps, " Repetitions) is ",mean(PowerfulDataframe$pvalue_PSE[PowerfulDataframe$nParticipants == nParticipants & PowerfulDataframe$reps == reps] < 0.05)))
PowerfulDataframe$pvalue_PSE
PowerfulDataframe$pvalue_PSE[PowerfulDataframe$nParticipants == nParticipants & PowerfulDataframe$reps == reps]
reps
PowerfulDataframe$reps
PowerfulDataframe$nParticipants == nParticipants
nParticipants
PowerfulDataframe$nParticipants
mean(PowerfulDataframe$pvalue_PSE[PowerfulDataframe$nParticipants == nParticipants & PowerfulDataframe$reps == reps] < 0.05)
PowerfulDataframe$pvalue_PSE[PowerfulDataframe$nParticipants == nParticipants & PowerfulDataframe$reps == reps] < 0.05
PowerfulDataframe$pvalue_PSE
PowerfulDataframe$pvalue_PSE[PowerfulDataframe$nParticipants == nParticipants & PowerfulDataframe$reps == reps]
set.seed(1)
RangeNs = c(10,12,14,16,18,20)
RangeRepetitions = c(40,70,100)
ConditionOfInterest = c(0,1)
StandardValues = c(5,6,7,8)
PSE_Difference = 0.1
JND_Difference = 0.25
Multiplicator_PSE_Standard = 0
Multiplicator_SD_Standard = 0.15
Type_ResponseFunction = "normal"
SD_ResponseFunction = 0.1
Mean_Variability_Between = 0.2
SD_Variability_Between = 0.2
nIterations = 200
PowerfulDataframe = data.frame()
for (nParticipants in RangeNs){
for (reps in RangeRepetitions){
TimeStartTrial = Sys.time() #get time at beginning of trial
for(i in 1:nIterations){
Psychometric = SimulatePsychometricData(nParticipants,
ConditionOfInterest,
StandardValues,
reps,
PSE_Difference,
JND_Difference,
Multiplicator_PSE_Standard,
Multiplicator_SD_Standard,
Type_ResponseFunction,
SD_ResponseFunction,
Mean_Variability_Between,
SD_Variability_Between)
GLMM = glmer(cbind(Yes, Total - Yes) ~ ConditionOfInterest*Difference + (ConditionOfInterest+Difference| ID) + (ConditionOfInterest+Difference| StandardValues),
family = binomial(link = "logit"),
data = Psychometric,
nAGQ = 1,
glmerControl(optimizer = "nloptwrap"))
summary(GLMM)$coefficients[14]
summary(GLMM)$coefficients[16]
PowerfulDataframe = rbind(PowerfulDataframe,c(nParticipants=nParticipants,
reps=reps,
pvalue_PSE = summary(GLMM)$coefficients[14],
pvalue_JND = summary(GLMM)$coefficients[16],
iteration = i))
}
print(paste0(nIterations, " iterations took ", round(Sys.time() - TimeStartTrial), " seconds. The power for the current run through (",nParticipants," Participants, ", reps, " Repetitions) is ",mean(PowerfulDataframe$pvalue_PSE[PowerfulDataframe$nParticipants == nParticipants & PowerfulDataframe$reps == reps] < 0.05)))
}
}
set.seed(1)
RangeNs = c(10,12,14,16,18,20)
RangeRepetitions = c(40,70,100)
ConditionOfInterest = c(0,1)
StandardValues = c(5,6,7,8)
PSE_Difference = 0.1
JND_Difference = 0.25
Multiplicator_PSE_Standard = 0
Multiplicator_SD_Standard = 0.15
Type_ResponseFunction = "normal"
SD_ResponseFunction = 0.1
Mean_Variability_Between = 0.2
SD_Variability_Between = 0.2
nIterations = 1
PowerfulDataframe = data.frame()
for (nParticipants in RangeNs){
for (reps in RangeRepetitions){
TimeStartTrial = Sys.time() #get time at beginning of trial
for(i in 1:nIterations){
Psychometric = SimulatePsychometricData(nParticipants,
ConditionOfInterest,
StandardValues,
reps,
PSE_Difference,
JND_Difference,
Multiplicator_PSE_Standard,
Multiplicator_SD_Standard,
Type_ResponseFunction,
SD_ResponseFunction,
Mean_Variability_Between,
SD_Variability_Between)
GLMM = glmer(cbind(Yes, Total - Yes) ~ ConditionOfInterest*Difference + (ConditionOfInterest+Difference| ID) + (ConditionOfInterest+Difference| StandardValues),
family = binomial(link = "logit"),
data = Psychometric,
nAGQ = 1,
glmerControl(optimizer = "nloptwrap"))
summary(GLMM)$coefficients[14]
summary(GLMM)$coefficients[16]
PowerfulDataframe = rbind(PowerfulDataframe,c(nParticipants=nParticipants,
reps=reps,
pvalue_PSE = summary(GLMM)$coefficients[14],
pvalue_JND = summary(GLMM)$coefficients[16],
iteration = i))
}
print(paste0(nIterations, " iterations took ", round(Sys.time() - TimeStartTrial), " seconds. The power for the current run through (",nParticipants," Participants, ", reps, " Repetitions) is ",mean(PowerfulDataframe$pvalue_PSE[PowerfulDataframe$nParticipants == nParticipants & PowerfulDataframe$reps == reps] < 0.05)))
}
}
PowerfulDataframe$reps == reps
reps = 40
reps
PowerfulDataframe$reps == reps
PowerfulDataframe$reps
PowerfulDataframe$nParticipants
PowerfulDataframe$pvalue_PSE
PowerfulDataframe
PowerfulDataframe = data.frame()
colnames(PowerfulDataframe) = c("nParticipants","reps","pvalue_PSE","pvalue_JND","iteration")
set.seed(1)
RangeNs = c(10,12,14,16,18,20)
RangeRepetitions = c(40,70,100)
ConditionOfInterest = c(0,1)
StandardValues = c(5,6,7,8)
PSE_Difference = 0.1
JND_Difference = 0.25
Multiplicator_PSE_Standard = 0
Multiplicator_SD_Standard = 0.15
Type_ResponseFunction = "normal"
SD_ResponseFunction = 0.1
Mean_Variability_Between = 0.2
SD_Variability_Between = 0.2
nIterations = 1
PowerfulDataframe = data.frame()
for (nParticipants in RangeNs){
for (reps in RangeRepetitions){
TimeStartTrial = Sys.time() #get time at beginning of trial
for(i in 1:nIterations){
Psychometric = SimulatePsychometricData(nParticipants,
ConditionOfInterest,
StandardValues,
reps,
PSE_Difference,
JND_Difference,
Multiplicator_PSE_Standard,
Multiplicator_SD_Standard,
Type_ResponseFunction,
SD_ResponseFunction,
Mean_Variability_Between,
SD_Variability_Between)
GLMM = glmer(cbind(Yes, Total - Yes) ~ ConditionOfInterest*Difference + (ConditionOfInterest+Difference| ID) + (ConditionOfInterest+Difference| StandardValues),
family = binomial(link = "logit"),
data = Psychometric,
nAGQ = 1,
glmerControl(optimizer = "nloptwrap"))
summary(GLMM)$coefficients[14]
summary(GLMM)$coefficients[16]
PowerfulDataframe = rbind(PowerfulDataframe,c(nParticipants=nParticipants,
reps=reps,
pvalue_PSE = summary(GLMM)$coefficients[14],
pvalue_JND = summary(GLMM)$coefficients[16],
iteration = i))
colnames(PowerfulDataframe) = c("nParticipants","reps","pvalue_PSE","pvalue_JND","iteration")
}
print(paste0(nIterations, " iterations took ", round(Sys.time() - TimeStartTrial), " seconds. The power for the current run through (",nParticipants," Participants, ", reps, " Repetitions) is ",mean(PowerfulDataframe$pvalue_PSE[PowerfulDataframe$nParticipants == nParticipants & PowerfulDataframe$reps == reps] < 0.05)))
}
}
set.seed(1)
RangeNs = c(10,12,14,16,18,20)
RangeRepetitions = c(40,70,100)
ConditionOfInterest = c(0,1)
StandardValues = c(5,6,7,8)
PSE_Difference = 0.1
JND_Difference = 0.25
Multiplicator_PSE_Standard = 0
Multiplicator_SD_Standard = 0.15
Type_ResponseFunction = "normal"
SD_ResponseFunction = 0.1
Mean_Variability_Between = 0.2
SD_Variability_Between = 0.2
nIterations = 200
PowerfulDataframe = data.frame()
for (nParticipants in RangeNs){
for (reps in RangeRepetitions){
TimeStartTrial = Sys.time() #get time at beginning of trial
for(i in 1:nIterations){
Psychometric = SimulatePsychometricData(nParticipants,
ConditionOfInterest,
StandardValues,
reps,
PSE_Difference,
JND_Difference,
Multiplicator_PSE_Standard,
Multiplicator_SD_Standard,
Type_ResponseFunction,
SD_ResponseFunction,
Mean_Variability_Between,
SD_Variability_Between)
GLMM = glmer(cbind(Yes, Total - Yes) ~ ConditionOfInterest*Difference + (ConditionOfInterest+Difference| ID) + (ConditionOfInterest+Difference| StandardValues),
family = binomial(link = "logit"),
data = Psychometric,
nAGQ = 1,
glmerControl(optimizer = "nloptwrap"))
summary(GLMM)$coefficients[14]
summary(GLMM)$coefficients[16]
PowerfulDataframe = rbind(PowerfulDataframe,c(nParticipants=nParticipants,
reps=reps,
pvalue_PSE = summary(GLMM)$coefficients[14],
pvalue_JND = summary(GLMM)$coefficients[16],
iteration = i))
colnames(PowerfulDataframe) = c("nParticipants","reps","pvalue_PSE","pvalue_JND","iteration")
}
print(paste0(nIterations, " iterations took ", round(Sys.time() - TimeStartTrial), " seconds. The power for the current run through (",nParticipants," Participants, ", reps, " Repetitions) is ",mean(PowerfulDataframe$pvalue_PSE[PowerfulDataframe$nParticipants == nParticipants & PowerfulDataframe$reps == reps] < 0.05)))
}
}
alpha = 0.05
PowerfulDataframe = PowerfulDataframe %>% group_by(nParticipants,reps) %>%
mutate(Power_PSE = mean(pvalue_PSE < alpha),
Power_JND = mean(pvalue_JND < alpha))
PowerfulDataframe %>% group_by(nParticipants,reps) %>%
slice(1)
ggplot(PowerfulDataframe, aes(reps,Power_PSE, color = as.factor(nParticipants))) +
geom_line() +
xlab("Number of trials per staircase") +
ylab("Power") +
scale_color_discrete(name = "Number of\nParticipants")
set.seed(1)
RangeNs = c(10,12,14,16,18,20)
RangeRepetitions = c(40,70,100)
ConditionOfInterest = c(0,1)
StandardValues = c(5,6,7,8)
PSE_Difference = 0.025
JND_Difference = 0.05
Multiplicator_PSE_Standard = 0
Multiplicator_SD_Standard = 0.15
Type_ResponseFunction = "normal"
SD_ResponseFunction = 0.1
Mean_Variability_Between = 0.2
SD_Variability_Between = 0.2
nIterations = 200
PowerfulDataframe = data.frame()
for (nParticipants in RangeNs){
for (reps in RangeRepetitions){
TimeStartTrial = Sys.time() #get time at beginning of trial
for(i in 1:nIterations){
Psychometric = SimulatePsychometricData(nParticipants,
ConditionOfInterest,
StandardValues,
reps,
PSE_Difference,
JND_Difference,
Multiplicator_PSE_Standard,
Multiplicator_SD_Standard,
Type_ResponseFunction,
SD_ResponseFunction,
Mean_Variability_Between,
SD_Variability_Between)
GLMM = glmer(cbind(Yes, Total - Yes) ~ ConditionOfInterest*Difference + (ConditionOfInterest+Difference| ID) + (ConditionOfInterest+Difference| StandardValues),
family = binomial(link = "logit"),
data = Psychometric,
nAGQ = 1,
glmerControl(optimizer = "nloptwrap"))
summary(GLMM)$coefficients[14]
summary(GLMM)$coefficients[16]
PowerfulDataframe = rbind(PowerfulDataframe,c(nParticipants=nParticipants,
reps=reps,
pvalue_PSE = summary(GLMM)$coefficients[14],
pvalue_JND = summary(GLMM)$coefficients[16],
iteration = i))
colnames(PowerfulDataframe) = c("nParticipants","reps","pvalue_PSE","pvalue_JND","iteration")
}
print(paste0(nIterations, " iterations took ", round(Sys.time() - TimeStartTrial), " seconds. The power for the current run through (",nParticipants," Participants, ", reps, " Repetitions) is ",mean(PowerfulDataframe$pvalue_PSE[PowerfulDataframe$nParticipants == nParticipants & PowerfulDataframe$reps == reps] < 0.05), " (PSE) and ", mean(PowerfulDataframe$pvalue_JND[PowerfulDataframe$nParticipants == nParticipants & PowerfulDataframe$reps == reps] < 0.05)," (JND)."))
}
}
alpha = 0.05
PowerfulDataframe = PowerfulDataframe %>% group_by(nParticipants,reps) %>%
mutate(Power_PSE = mean(pvalue_PSE < alpha),
Power_JND = mean(pvalue_JND < alpha))
PowerfulDataframe %>% group_by(nParticipants,reps) %>%
slice(1)
ggplot(PowerfulDataframe, aes(reps,Power_PSE, color = as.factor(nParticipants))) +
geom_line() +
xlab("Number of trials per staircase") +
ylab("Power") +
scale_color_discrete(name = "Number of\nParticipants")
#####MAIN PLOTS
#model predictions 0.1 0.25
FigurePSEsFromGLMM = ggplot(Dataframe2 %>% filter(PSE_Difference == 0.1 & JND_Difference == 0.25),aes(Model,Mean_Modeled-Mean_Actual)) +
geom_boxplot() +
ylab("PSE Output of GLMM - Actual PSE") +
geom_hline(aes(yintercept = 0), linetype = 2, size = 1) +
coord_cartesian(ylim = c(-3,3)) +
xlab("") +
ggtitle("Estimate of PSE coefficient (PSE Difference = 0.1/JND Difference = 0.25)")
FigurePSEsFromGLMM
nParticipants
nParticipants = 20
ID
